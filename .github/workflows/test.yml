name: 'Test'

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  APP_PATH: "./"

jobs:
  # Extract version for potential use in tests
  extract-version:
    uses: ./.github/workflows/extract-version.yml
    with:
      path: ${{ env.APP_PATH }}

  # Frontend tests
  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd ${{ env.APP_PATH }}
          pnpm install

      - name: Run frontend tests
        run: |
          cd ${{ env.APP_PATH }}
          pnpm test

      - name: Run frontend linting
        run: |
          cd ${{ env.APP_PATH }}
          pnpm lint

  # Rust/Tauri tests
  rust-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Run Rust tests
        run: |
          cd ${{ env.APP_PATH }}/src-tauri
          cargo test

      - name: Run Rust linting
        run: |
          cd ${{ env.APP_PATH }}/src-tauri
          cargo clippy -- -D warnings

      - name: Check Rust formatting
        run: |
          cd ${{ env.APP_PATH }}/src-tauri
          cargo fmt --check

  # Security audit
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd ${{ env.APP_PATH }}
          pnpm install

      - name: Run npm audit
        run: |
          cd ${{ env.APP_PATH }}
          pnpm audit

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run Rust security audit
        run: |
          cd ${{ env.APP_PATH }}/src-tauri
          cargo audit

  # Test summary
  test-summary:
    needs: [frontend-test, rust-test, security-audit]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Test Summary
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend | ${{ needs.frontend-test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Rust | ${{ needs.rust-test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Audit | ${{ needs.security-audit.result }} |" >> $GITHUB_STEP_SUMMARY
